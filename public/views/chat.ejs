<!DOCTYPE html>
<html lang="pl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Chat</title>
    <script src="/socket.io/socket.io.js"></script>
    
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

    <link rel="stylesheet" type="text/css" href="styles/style.css">

    <script>
        emailList = []
        function validateEmail(email) {
            var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }
        function htmlEntities(str) {
            return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
        }
        function addMail(){
            emailLine = document.getElementById("dvEmailLine");
            p = "";
            if(document.getElementsByClassName("emailList").length > 0 ){
                p=", "
            };
            friendEmail = document.getElementById("friendEmail")
            email = friendEmail.value
            
            if(validateEmail(email) && emailList.indexOf(email)==-1){
                emailLine.innerHTML += `${p}<div class="emailList"> ${friendEmail.value} </div>`
                emailList.push(email);
            }
            friendEmail.value='';
        }
        var socket = io();
        //Funkcja do roobienia nazw pokojów, na razie naiwna
        function makeRoomName(mailList) {
            sList = mailList.sort();//.map(l => l.id).sort();
            var sList = sList.filter(function(elem, index, self) {
                    return index === self.indexOf(elem);
            })
            name = ''
            for (const user in sList) {
                name += sList[user].toString();
            }
            return name;
        }
        //funckja do wybierania konkretnego pokoju
        function chooseRoom(homeEmail, mailList) {
            // alert("działa")
            if (mailList == []) {
                alert("Nie możesz (jeszcze) pisać do samego siebie")
            } else {
                room = makeRoomName([homeEmail].concat(mailList));
                msg = document.getElementById("messages");
                msg.innerHTML = "";
                socket.emit('room', room);
            } ;
        }
        socket.on('diag', function (data) {
            if (data = "notLogged") {
                var b = document.getElementById('inBody');
                b.innerHTML = "<h1 class='error'>Zaloguj się!</h1>";
                alert("Musisz się zalogować!");
                window.location.href = '../';
            }
        })
        //emitowanie informacji o wyjściu z czatu, żeby usunąć socket z listy aktywnych
        window.addEventListener('beforeunload', function (event) {
            socket.emit('diag', "exit");
        });

        window.addEventListener('load', function () {

            //wyświetlanie czasu
            socket.on('time', function (data) {
                var t = document.getElementById('time');
                t.innerHTML = data;
            });
            //prośba o listę znajomych
            socket.emit('friend list', "start");

            //otrzymanie listy znajomych
            socket.on('friend list', function (list) {
                var fList = document.getElementById('friendBox');
                var fListMenu = document.getElementById('FriendsOnMenu');
                if (list.length > 0){
                    fList.innerHTML += "<h1>Friends:</h1>";

                    for (const friend in list) {
                        //to chyba nie jest najładniejszy sposób, ale działa.
                        //Każdy wpis z listy przyjaciół pakuję w diva
                        var box1 = `<div 
                                        class="dvFriends"
                                        id="fr${list[friend].id}" 
                                        onclick="chooseRoom('<%= email %>',['${list[friend].email}']);" 
                                        style="cursor: pointer;">${list[friend].name}</div>`

                        var box2 = `<a  class="dropdown-item"
                                        onclick="chooseRoom('<%= email %>',['${list[friend].email}']);"
                                        style="cursor: pointer;"
                                        id="fr${list[friend].id}">
                                            ${list[friend].name}
                                    </a>`
                        fList.innerHTML += box1;
                        fListMenu.innerHTML += box2;

                    };
                }

            });

            //wyświetlanie wiadomości:
            socket.on('chat message', function (data) {
                var msg = document.getElementById('messages');
                if(data.email == '<%= email %>'){
                    msg.innerHTML += '<p class="incmsg">' + htmlEntities(data.value) + '</p>';
                }
                else{
                    msg.innerHTML += '<p class="foreign_incmsg">' + htmlEntities(data.value) + '</p>';
                }
                msg.scrollTop = msg.scrollHeight;
            });

            //Wysyłanie wiadomości:
            function sendMsg(txtmessage){
                if(txtmessage.value != ""){
                    for (let index = 0; index < txtmessage.value.length - 500; index+=0) {
	                    var msg_part = txtmessage.value.substring(0,500);	
                        txtmessage.value = txtmessage.value.substring(500,txtmessage.value.length);	
                        socket.emit('chat message', {value: msg_part, email: '<%= email %>'});
                    }
                    socket.emit('chat message', {value: txtmessage.value.substring(0,1000), email: '<%= email %>'});
                    txtmessage.value = "";
                }
            };

            var btsend = document.getElementById('btsend');
            btsend.addEventListener('click', function () {
                var txtmessage = document.getElementById('txtmessage');
                sendMsg(txtmessage);
            });
            var txtsend = document.getElementById('txtmessage');
            txtsend.addEventListener('keypress', function (e) {
                var key = e.which || e.keyCode;
                if (key === 13) { // 13 is enter
                    sendMsg(txtsend);
                }
            });
            document.getElementById("submitNewMsg").addEventListener("click", function() {
                chooseRoom('<%= email %>', emailList);
                emailList = [];
                document.getElementById("dvEmailLine").innerHTML="";
            });
            document.getElementById("resetNewMsg").addEventListener("click", function() {
                emailList = [];
                document.getElementById("dvEmailLine").innerHTML="";
            });
        });
        
    </script>
</head>

<body>
    <div id="inBody">
        <!-- pasek nawigacyjny -->
        <nav class="navbar navbar-expand-sm navbar-light bg-success">
            <!-- Tytuł paska nawigacyjnego -->
            <a class="navbar-brand" href="/">
                <img src="http://icons.iconarchive.com/icons/froyoshark/enkel/512/iMessage-icon.png" width="30" height="30" class="d-inline-block align-top"
                    alt=""> Pogadaj se!
            </a>

            <!-- Guzik menu, który się pojawia po zmianie szerokości paska -->
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarChat" aria-controls="navbarChat"
                aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarChat">

                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="/">Home </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/">Powrót</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/logout">Wyloguj</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="http://example.com" id="dropdown03" data-toggle="dropdown" aria-haspopup="true"
                            aria-expanded="false">Znajomi</a>
                        <div class="dropdown-menu" aria - labelledby="Friends" id="FriendsOnMenu">

                        </div>
                    </li>
                </ul>
                <button type="button" class="btn btn-outline-light" data-toggle="modal" data-target="#newMsgModal">Nowa wiadomość</button>
            </div>
        </nav>

        <div id="friendBox">
            
        </div>
        <div id="chatBox">Aktualny czas na serwerze:
        
            <br>
            <b>
                <span id="time"></span>
            </b>

            <div>
                
                <div id='messages'>
                    
                </div>
                <div id=inputMessages>
                    <input type='text' style="text-align: right;" id='txtmessage' maxlength="500"/>
                    <input type="button" class= "btn btn-primary btn-block" id='btsend' value="Wyślij" />
                </div>
                
            </div>
        </div>

    </div>
    <!-- Modal -->
    <div class="modal fade" id="newMsgModal" tabindex="-1" role="dialog" aria-labelledby="newMsgModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="title">Nowa wiadomość</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
        </div>

            <div class="modal-body">
            <label for="friendEmail">Podaj email znajomego:</label><br>
            <input type="email" id=friendEmail name="friendEmail" placeholder="Email" list="emailList" autofocus>
            <button type="button" class="btn btn-info btn-sm" onclick="addMail();" id="btAddEmail">+</button>
            <datalist id="emailList">
            <select id="emailSelect">
            </select>
            </datalist>
            <div id="dvEmailLine"></div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Zamknij</button>
            <button type="reset" class="btn btn-warning" id="resetNewMsg">Wyczyść</button>
            <button type="button" class="btn btn-primary" id="submitNewMsg"  data-dismiss="modal">Utwórz</button>
        </div>
        </div>
    </div>
    </div>
</body>

</html>